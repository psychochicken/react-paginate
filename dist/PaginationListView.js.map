{"version":3,"sources":["../react_components/PaginationListView.js"],"names":[],"mappings":"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","file":"PaginationListView.js","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\nimport createFragment from 'react-addons-create-fragment';\nimport PageView from './PageView';\n\n\nexport default class PaginationListView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isMobile: true\n    };\n  }\n\n  componentDidMount() {\n    this.checkMobileWidth();\n\n    window.addEventListener('resize', () => {\n      this.checkMobileWidth();\n    }, true);\n  }\n\n  checkMobileWidth = () => {\n    if (window.innerWidth > this.props.mobileBreakpoint) {\n      this.setState({isMobile: false});\n    } else {\n      this.setState({isMobile: true});\n    }\n  };\n\n  renderMobileListView = (items) => {\n    return (\n      <ul className={this.props.subContainerClassName}>\n        <li className={this.props.mobilePageClassName}>\n          {this.props.mobilePageLabel}\n          &nbsp;\n          {this.props.selected + 1}\n          &nbsp;\n          {this.props.mobileOfLabel}\n          &nbsp;\n          {this.props.pageNum}\n        </li>\n      </ul>\n    );\n  };\n\n  renderDesktopListView = (items) => {\n    return (\n      <ul className={this.props.subContainerClassName}>\n        {createFragment(items)}\n      </ul>\n    );\n  };\n\n  render() {\n    let items = {};\n\n    if (this.props.pageNum <= this.props.pageRangeDisplayed) {\n\n      for (let index = 0; index < this.props.pageNum; index++) {\n        items['key' + index] = <PageView\n          onClick={this.props.onPageSelected.bind(null, index)}\n          selected={this.props.selected === index}\n          pageClassName={this.props.pageClassName}\n          pageLinkClassName={this.props.pageLinkClassName}\n          activeClassName={this.props.activeClassName}\n          page={index + 1} />\n      }\n\n    } else {\n\n      let leftSide  = (this.props.pageRangeDisplayed / 2);\n      let rightSide = (this.props.pageRangeDisplayed - leftSide);\n\n      if (this.props.selected > this.props.pageNum - this.props.pageRangeDisplayed / 2) {\n        rightSide = this.props.pageNum - this.props.selected;\n        leftSide  = this.props.pageRangeDisplayed - rightSide;\n      }\n      else if (this.props.selected < this.props.pageRangeDisplayed / 2) {\n        leftSide  = this.props.selected;\n        rightSide = this.props.pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n\n      for (index = 0; index < this.props.pageNum; index++) {\n\n        page = index + 1;\n\n        let pageView = (\n          <PageView\n            onClick={this.props.onPageSelected.bind(null, index)}\n            selected={this.props.selected === index}\n            pageClassName={this.props.pageClassName}\n            pageLinkClassName={this.props.pageLinkClassName}\n            activeClassName={this.props.activeClassName}\n            page={index + 1} />\n        );\n\n        if (page <= this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if (page > this.props.pageNum - this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if ((index >= this.props.selected - leftSide) && (index <= this.props.selected + rightSide)) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        let keys            = Object.keys(items);\n        let breakLabelKey   = keys[keys.length - 1];\n        let breakLabelValue = items[breakLabelKey];\n\n        if (breakLabelValue !== this.props.breakLabel) {\n          items['key' + index] = this.props.breakLabel;\n        }\n      }\n    }\n\n    return this.state.isMobile || this.props.mobileAlways ? this.renderMobileListView() : this.renderDesktopListView(items);\n  }\n};\n"]}