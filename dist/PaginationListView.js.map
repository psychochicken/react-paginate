{"version":3,"sources":["../react_components/PaginationListView.js"],"names":[],"mappings":"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","file":"PaginationListView.js","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\nimport createFragment from 'react-addons-create-fragment';\nimport PageView from './PageView';\n\n\nexport default class PaginationListView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isMobile: true\n    };\n  }\n\n  componentDidMount() {\n    this.checkMobileWidth();\n\n    window.addEventListener('resize', () => {\n      this.checkMobileWidth();\n    }, true);\n  }\n\n  checkMobileWidth = () => {\n    if (window.innerWidth > this.props.mobileBreakpoint) {\n      this.setState({isMobile: false});\n    } else {\n      this.setState({isMobile: true});\n    }\n  };\n\n  renderMobileListView = (items) => {\n    return (\n      <ul className={this.props.subContainerClassName}>\n        <li className={this.props.mobilePageClassName}>\n          {this.props.mobilePageLabel}\n          &nbsp;\n          {this.props.selected + 1}\n          &nbsp;\n          {this.props.mobileOfLabel}\n          &nbsp;\n          {this.props.pageNum}\n        </li>\n      </ul>\n    );\n  };\n\n  renderDesktopListView = (items) => {\n    return (\n      <ul className={this.props.subContainerClassName}>\n        {createFragment(items)}\n      </ul>\n    );\n  };\n\n  render() {\n    let items = {};\n\n    if (this.props.pageNum <= this.props.pageRangeDisplayed) {\n\n      for (let index = 0; index < this.props.pageNum; index++) {\n        items['key' + index] = <PageView\n          onClick={this.props.onPageSelected.bind(null, index)}\n          selected={this.props.selected === index}\n          pageClassName={this.props.pageClassName}\n          pageLinkClassName={this.props.pageLinkClassName}\n          activeClassName={this.props.activeClassName}\n          page={index + 1} />\n      }\n\n    } else {\n\n      let leftSide  = (this.props.pageRangeDisplayed / 2);\n      let rightSide = (this.props.pageRangeDisplayed - leftSide);\n\n      if (this.props.selected > this.props.pageNum - this.props.pageRangeDisplayed / 2) {\n        rightSide = this.props.pageNum - this.props.selected;\n        leftSide  = this.props.pageRangeDisplayed - rightSide;\n      }\n      else if (this.props.selected < this.props.pageRangeDisplayed / 2) {\n        leftSide  = this.props.selected;\n        rightSide = this.props.pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n\n      for (index = 0; index < this.props.pageNum; index++) {\n\n        page = index + 1;\n\n        let pageView = (\n          <PageView\n            onClick={this.props.onPageSelected.bind(null, index)}\n            selected={this.props.selected === index}\n            pageClassName={this.props.pageClassName}\n            pageLinkClassName={this.props.pageLinkClassName}\n            activeClassName={this.props.activeClassName}\n            page={index + 1} />\n        );\n\n        if (page <= this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if (page > this.props.pageNum - this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if ((index >= this.props.selected - leftSide) && (index <= this.props.selected + rightSide)) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        let keys            = Object.keys(items);\n        let breakLabelKey   = keys[keys.length - 1];\n        let breakLabelValue = items[breakLabelKey];\n\n        if (breakLabelValue !== this.props.breakLabel) {\n          items['key' + index] = this.props.breakLabel;\n        }\n      }\n    }\n\n    return this.state.isMobile || this.props.mobileAlways ? this.renderMobileListView() : this.renderDesktopListView(items);\n  }\n};\n"]}